import { APIResource } from "../core/resource.mjs";
import * as ChatAPI from "./chat/chat.mjs";
import { APIPromise } from "../core/api-promise.mjs";
import { RequestOptions } from "../internal/request-options.mjs";
export declare class Moderations extends APIResource {
    /**
     * Classifies if given messages are potentially harmful across several categories.
     */
    create(body: ModerationCreateParams, options?: RequestOptions): APIPromise<ModerationCreateResponse>;
}
export interface ModerationCreateResponse {
    model: string;
    results: Array<ModerationCreateResponse.Result>;
}
export declare namespace ModerationCreateResponse {
    interface Result {
        flagged: boolean;
        flagged_categories: Array<string>;
    }
}
export interface ModerationCreateParams {
    /**
     * List of messages in the conversation.
     */
    messages: Array<ChatAPI.Message>;
    /**
     * Optional identifier of the model to use. Defaults to "Llama-Guard".
     */
    model?: string;
}
export declare namespace Moderations {
    export { type ModerationCreateResponse as ModerationCreateResponse, type ModerationCreateParams as ModerationCreateParams, };
}
//# sourceMappingURL=moderations.d.mts.map